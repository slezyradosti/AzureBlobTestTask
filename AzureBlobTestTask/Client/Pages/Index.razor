@page "/"
@using AzureBlobTestTask.Client.Entities
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Internal

<div class="container-sm">
    <EditForm Model="@blob" OnSubmit=@blob.HandleValidRequestAsync>
        <div class="form-group">
            <div class="mb-3">
                <label class="form-label">Email</label>
                <InputText class="col-md-8 form-control" @bind-Value="@blob.blobFormDto.Email" oninput="@ClearMessages"></InputText>
            </div>
            <div class="mb-3">
                <label class="form-label">FIle document</label>
                <InputFile OnChange="@LoadFiles" class="col-md-8 form-control" accept=".docx"></InputFile>
            </div>
            <DataAnnotationsValidator />
            <ValidationSummary />
            <p style="color: red">@blob.ErrorMessage</p>
            <p style="color: limegreen">@blob.SuccessMessage</p>
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-success" disabled="@(!context.IsModified())">Submit</button>
        </div>
    </EditForm>
</div>

@code {
    private Blob blob;

    protected override void OnInitialized() => blob ??= new();

    private void ClearMessages()
    {
        blob.ErrorMessage = string.Empty;
        blob.SuccessMessage = string.Empty;
    }

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        ClearMessages();

        byte[] fileBytes;
        using (var ms = new MemoryStream())
        {
            await e.File.OpenReadStream().CopyToAsync(ms);
            fileBytes = ms.ToArray();
        }

        var fileName = e.File.Name;
        var contentType = e.File.ContentType;

        var formFile = new FormFile(new MemoryStream(fileBytes), 0, fileBytes.Length, null, fileName)
            {
                Headers = new HeaderDictionary(),
                ContentType = contentType,
                ContentDisposition = $"form-data; name=\"file\"; filename=\"{fileName}\""
            };

        blob.blobFormDto.File = formFile;
    }
}